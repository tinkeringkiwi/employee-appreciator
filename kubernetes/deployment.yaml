apiVersion: v1
kind: Namespace
metadata:
  name: employee-appreciator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-appreciator
  namespace: employee-appreciator
  labels:
    app: employee-appreciator
spec:
  replicas: 2
  selector:
    matchLabels:
      app: employee-appreciator
  template:
    metadata:
      labels:
        app: employee-appreciator
    spec:
      containers:
        - name: app
          # Image published to GHCR by CI. Update tag as appropriate.
          image: ghcr.io/tinkeringkiwi/employee-appreciator:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
            - name: api
              containerPort: 8081
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: employee-appreciator-svc
  namespace: employee-appreciator
spec:
  selector:
    app: employee-appreciator
  ports:
    - name: http
      port: 80
      targetPort: 3000
    - name: api
      port: 8081
      targetPort: 8081
  type: ClusterIP

---
# Ingress: routes `/api` to the backend (port 8081) and everything else to the frontend (port 80 -> container 3000).
# Uses cert-manager ClusterIssuer `letsencrypt-prod` to obtain TLS certificates.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: employee-appreciator-ingress
  namespace: employee-appreciator
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  # tls:
  #   - hosts:
  #       - appreciator.tinkering.kiwi
  #     secretName: employee-appreciator-tls
  rules:
    - host: appreciator.myhackathon.app
      http:
        paths:
          # - path: /api
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: employee-appreciator-svc
          #       port:
          #         name: api
          - path: /
            pathType: Prefix
            backend:
              service:
                name: employee-appreciator-svc
                port:
                  number: 80
